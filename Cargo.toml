[package]
name = "cold-clear-web"
version = "0.1.0"
authors = ["analog-hors <44050761+analog-hors@users.noreply.github.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

cold-clear = { git = "https://github.com/MinusKelvin/cold-clear.git", rev = "af1eced" }
battle = { git = "https://github.com/MinusKelvin/cold-clear.git", rev = "af1eced" }
libtetris = { git = "https://github.com/MinusKelvin/cold-clear.git", rev = "af1eced" }
webutil = { git = "https://github.com/MinusKelvin/webutil.git", rev = "01c5b5f" }
arrayvec = "0.4"

wasm-bindgen = "0.2.65"
wasm-bindgen-futures = "0.4.15"
js-sys = "0.3.42"

[dependencies.web-sys]
version = "0.3.42"
features = [
    "Window",
    "Document",
    "Element",
    "Node",
    "HtmlCanvasElement",
    "HtmlImageElement",
    "DomTokenList",
    "CanvasRenderingContext2d",
    "Performance",
    "PerformanceTiming",
    "CssStyleDeclaration"
]

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
